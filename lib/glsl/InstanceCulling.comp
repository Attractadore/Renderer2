#include "InstanceCulling.glsl"
#include "Batch.glsl"

PUSH_CONSTANTS GLSL_INSTANCE_CULLING_CONSTANTS pc;

layout(local_size_x = INSTANCE_CULLING_THREADS) in;
void main() {
  const uint STRIDE = gl_NumWorkGroups.x * gl_WorkGroupSize.x;

  for (uint i = gl_GlobalInvocationID.x; i < pc.num_mesh_instances; i += STRIDE) {
    MeshInstanceCullData mesh_instance = pc.mesh_instances[i].data;
    MeshCullData mesh = pc.meshes[mesh_instance.mesh].data;

    MeshLOD lod = mesh.lods[0];

    DrawIndexedIndirectCommand command;
    command.num_indices = lod.num_indices; 
    command.num_instances = 1;
    command.base_index = lod.base_index;
    command.base_vertex = mesh.base_vertex;
    command.base_instance = i;

    uint batch_id = get_batch_id(mesh.attribute_mask, mesh.pool);
    uint offset = pc.batch_command_offsets[batch_id].offset + atomicAdd(pc.batch_command_counts[batch_id].count, 1);
    pc.commands[offset].command = command;
  }
}
